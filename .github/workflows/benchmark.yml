name: Benchmark

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * SAT'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install libcurl
      run:  sudo apt-get install libxml2-dev libfontconfig1-dev

    - name: Download openssl
      run: wget http://archive.ubuntu.com/ubuntu/pool/main/c/curl/libcurl4-openssl-dev_7.81.0-1_amd64.deb

    - name: Install openssl
      run: sudo dpkg -i libcurl4-openssl-dev_7.81.0-1_amd64.deb

  coluna:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instances:
          - "n2"
          - "n3"
    steps:
    - uses: actions/checkout@v3

    - name: Install GLPK
      run: sudo apt-get install glpk-utils libglpk-dev

    - uses: julia-actions/setup-julia@latest

    - name: Install JuMP and coluna
      run: julia -e 'using Pkg; Pkg.add("JuMP"); Pkg.add("BlockDecomposition"); Pkg.add("GLPK"); Pkg.add("Coluna"); Pkg.add("DelimitedFiles")'

    - name: Solve instances with coluna
      run: ./run_coluna.sh ./GAP/data/${{ matrix.instances }}

    - name: Rename results file
      run: mv results_GAP_coluna.csv results_GAP_coluna__$(uuidgen).csv

    - uses: actions/upload-artifact@v3
      with:
        name: results
        path: results_GAP_coluna__*.csv

  idol:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        arguments:
          - "external"
          - "bab true"
          - "bab false"
          - "bap true 0 false true"
          - "bap true 0 false false"
          - "bap true 0 true true"
          - "bap true .3 false true"
          - "bap true .8 false true"
        instances:
          - "n2"
          - "n3"
    steps:
    - uses: actions/checkout@v3

    - name: Update
      run: sudo apt-get update

    - name: Install GLPK
      run: sudo apt-get install glpk-utils libglpk-dev

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/cmake-build-debug -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/cmake-build-debug --config ${{env.BUILD_TYPE}}

    - name: Solve instances with idol
      run: ./run_idol.sh ./GAP/data/${{ matrix.instances }} ${{ matrix.arguments }}

    - name: Rename results file
      run: mv results_GAP_idol.csv results_GAP_idol__$(uuidgen).csv

    - uses: actions/upload-artifact@v3
      with:
        name: results
        path: results_GAP_idol__*.csv

  render:
    runs-on: ubuntu-latest
    needs: [coluna, idol]
    steps:
      - uses: actions/checkout@v3

      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: results

      - name: Collect all results from idol
        run: cat results_GAP_idol__*.csv > results_GAP_idol.csv

      - name: Collect all results from coluna
        run: cat results_GAP_coluna__*.csv > results_GAP_coluna.csv

      # Install all R markdown dependecies
      - name: Install dependencies of kableExtra
        run: sudo apt-get install libxml2-dev libfontconfig1-dev libcurl4-openssl-dev
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
      - uses: r-lib/actions/setup-renv@v2
      - name: Install rmarkdown
        run: R -e "install.packages(\"rmarkdown\")"
      - name: Install kableExtra
        run: R -e "install.packages(\"kableExtra\")"
      - name: Install tidyr
        run: R -e "install.packages(\"tidyr\")"

      - name: Render report
        run: ./build.sh

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: reports/
          force_orphan: true
